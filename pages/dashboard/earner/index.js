import Head from "next/head";
import Grid from "@mui/material/Grid";
import Container from "@mui/material/Container";
import { useEffect, useState } from "react";
import { ethers } from "ethers";
import axios from "axios";
import jwt from "jsonwebtoken";
import { credentialsRegistryAddress } from "../../../config";
import CredentialRegistry from "../../../artifacts/contracts/CredentialsRegistry.sol/CredentialsRegistry.json";
import CredentialCard from "../../../components/credential/CredentialCard";
import Navbar from "../../../components/layout/Navbar";

export default function Earner({ earner, credentials }) {
  return (
    <div>
      <Head>
        <title>Earner Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />

      <Container maxWidth="lg">
        <Grid sx={{ m: 4 }}>
          <Grid container spacing={2}>
            {credentials &&
              credentials.map((credential) => (
                <CredentialCard credential={credential} key={credential._id} />
              ))}
          </Grid>
        </Grid>
      </Container>
    </div>
  );
}

export const getServerSideProps = async ({ req }) => {
  const { cookies } = req;
  const token = cookies.vyeti_jwt;
  const decoded_token = jwt.decode(token);
  const account_id = decoded_token.id;
  if (decoded_token.type === "employer") {
    return {
      redirect: {
        destination: "/dashboard/employer",
        permanent: false,
      },
    };
  } else if (decoded_token.type === "provider") {
    return {
      redirect: {
        destination: "/dashboard/provider",
        permanent: false,
      },
    };
  } else {
    const account = await axios.get(
      `http://localhost:3000/api/earners/account/${account_id}`
    );
    const earnerId = account.data.earner._id;

    const res = await axios.get(
      `http://localhost:3000/api/earners/${earnerId}`
    );
    return {
      props: {
        earner: res.data.earner,
        credentials: res.data.credentials,
      },
    };
  }
};
